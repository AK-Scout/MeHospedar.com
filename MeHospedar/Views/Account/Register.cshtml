@model MeHospedar.Models.RegisterViewModel
@{
    ViewBag.Title = "Registre-se";
}



@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div id="signupbox" style=" margin-top:50px" class="mainbox col-md-6 col-md-offset-3">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <div class="panel-title">Cadastre-se</div>
                    <div style="float:right; font-size: 85%; position: relative; top:-10px">
                        <a>@Html.ActionLink("Entre Aqui", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</a>
                    </div>
                </div>
                <div class="panel-body">
                  
                        @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
                        {
                            <div class="alert alert-danger alert-dismissable">
                                @Html.ValidationSummary(false, "Verifique os seguintes erros: ")
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Nome, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Sobrenome, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail" } })
                                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Senha" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Repita a Senha" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <!-- Button -->
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" class="btn btn-info" value="Registrar-se" />
                                <span style="margin-left:8px;">or</span>
                            </div>
                        </div>

                        <div style="border-top: 1px solid #999; padding-top:20px" class="form-group">

                            <div class="col-md-offset-3 col-md-9">
                                <button id="btn-fbsignup" type="button" class="btn btn-primary"><i class="icon-facebook"></i> Entrar com Facebook</button>
                            </div>

                        </div>
                  
                </div>
            </div>
        </div>
    </div>


}


@*

    <h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Crie uma nova conta.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Registrar-se" />
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

*@